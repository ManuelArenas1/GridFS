// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: gridfs.proto
// Protobuf C++ Version: 6.32.0

#include "gridfs.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace gridfs {

inline constexpr RegisterResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        datanode_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterResponse::RegisterResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegisterResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterResponseDefaultTypeInternal() {}
  union {
    RegisterResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterResponseDefaultTypeInternal _RegisterResponse_default_instance_;

inline constexpr RegisterRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        capacity_{::uint64_t{0u}},
        data_port_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterRequest::RegisterRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegisterRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterRequestDefaultTypeInternal() {}
  union {
    RegisterRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterRequestDefaultTypeInternal _RegisterRequest_default_instance_;

inline constexpr GetPlanRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        filename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        filesize_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR GetPlanRequest::GetPlanRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetPlanRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetPlanRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPlanRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPlanRequestDefaultTypeInternal() {}
  union {
    GetPlanRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPlanRequestDefaultTypeInternal _GetPlanRequest_default_instance_;

inline constexpr BlockAssignment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        block_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        size_{::uint64_t{0u}},
        data_port_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR BlockAssignment::BlockAssignment(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BlockAssignment_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockAssignmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockAssignmentDefaultTypeInternal() {}
  union {
    BlockAssignment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockAssignmentDefaultTypeInternal _BlockAssignment_default_instance_;

inline constexpr GetPlanResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : assignments_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetPlanResponse::GetPlanResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetPlanResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetPlanResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPlanResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPlanResponseDefaultTypeInternal() {}
  union {
    GetPlanResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPlanResponseDefaultTypeInternal _GetPlanResponse_default_instance_;
}  // namespace gridfs
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_gridfs_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_gridfs_2eproto = nullptr;
const ::uint32_t
    TableStruct_gridfs_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::gridfs::RegisterRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::gridfs::RegisterRequest, _impl_.host_),
        PROTOBUF_FIELD_OFFSET(::gridfs::RegisterRequest, _impl_.data_port_),
        PROTOBUF_FIELD_OFFSET(::gridfs::RegisterRequest, _impl_.capacity_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::gridfs::RegisterResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::gridfs::RegisterResponse, _impl_.datanode_id_),
        PROTOBUF_FIELD_OFFSET(::gridfs::RegisterResponse, _impl_.success_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::gridfs::GetPlanRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::gridfs::GetPlanRequest, _impl_.filename_),
        PROTOBUF_FIELD_OFFSET(::gridfs::GetPlanRequest, _impl_.filesize_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::gridfs::BlockAssignment, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::gridfs::BlockAssignment, _impl_.block_id_),
        PROTOBUF_FIELD_OFFSET(::gridfs::BlockAssignment, _impl_.host_),
        PROTOBUF_FIELD_OFFSET(::gridfs::BlockAssignment, _impl_.data_port_),
        PROTOBUF_FIELD_OFFSET(::gridfs::BlockAssignment, _impl_.size_),
        0,
        1,
        3,
        2,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::gridfs::GetPlanResponse, _impl_.assignments_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::gridfs::RegisterRequest)},
        {9, sizeof(::gridfs::RegisterResponse)},
        {16, sizeof(::gridfs::GetPlanRequest)},
        {23, sizeof(::gridfs::BlockAssignment)},
        {34, sizeof(::gridfs::GetPlanResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::gridfs::_RegisterRequest_default_instance_._instance,
    &::gridfs::_RegisterResponse_default_instance_._instance,
    &::gridfs::_GetPlanRequest_default_instance_._instance,
    &::gridfs::_BlockAssignment_default_instance_._instance,
    &::gridfs::_GetPlanResponse_default_instance_._instance,
};
const char descriptor_table_protodef_gridfs_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014gridfs.proto\022\006gridfs\"D\n\017RegisterReques"
    "t\022\014\n\004host\030\001 \001(\t\022\021\n\tdata_port\030\002 \001(\r\022\020\n\010ca"
    "pacity\030\003 \001(\004\"8\n\020RegisterResponse\022\023\n\013data"
    "node_id\030\001 \001(\t\022\017\n\007success\030\002 \001(\010\"4\n\016GetPla"
    "nRequest\022\020\n\010filename\030\001 \001(\t\022\020\n\010filesize\030\002"
    " \001(\004\"R\n\017BlockAssignment\022\020\n\010block_id\030\001 \001("
    "\t\022\014\n\004host\030\002 \001(\t\022\021\n\tdata_port\030\003 \001(\r\022\014\n\004si"
    "ze\030\004 \001(\004\"\?\n\017GetPlanResponse\022,\n\013assignmen"
    "ts\030\001 \003(\0132\027.gridfs.BlockAssignment2\215\001\n\010Na"
    "meNode\022E\n\020RegisterDataNode\022\027.gridfs.Regi"
    "sterRequest\032\030.gridfs.RegisterResponse\022:\n"
    "\007GetPlan\022\026.gridfs.GetPlanRequest\032\027.gridf"
    "s.GetPlanResponseb\006proto3"
};
static ::absl::once_flag descriptor_table_gridfs_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_gridfs_2eproto = {
    false,
    false,
    505,
    descriptor_table_protodef_gridfs_2eproto,
    "gridfs.proto",
    &descriptor_table_gridfs_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_gridfs_2eproto::offsets,
    file_level_enum_descriptors_gridfs_2eproto,
    file_level_service_descriptors_gridfs_2eproto,
};
namespace gridfs {
// ===================================================================

class RegisterRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegisterRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_._has_bits_);
};

RegisterRequest::RegisterRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:gridfs.RegisterRequest)
}
PROTOBUF_NDEBUG_INLINE RegisterRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::gridfs::RegisterRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        host_(arena, from.host_) {}

RegisterRequest::RegisterRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegisterRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, capacity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, capacity_),
           offsetof(Impl_, data_port_) -
               offsetof(Impl_, capacity_) +
               sizeof(Impl_::data_port_));

  // @@protoc_insertion_point(copy_constructor:gridfs.RegisterRequest)
}
PROTOBUF_NDEBUG_INLINE RegisterRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        host_(arena) {}

inline void RegisterRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, capacity_),
           0,
           offsetof(Impl_, data_port_) -
               offsetof(Impl_, capacity_) +
               sizeof(Impl_::data_port_));
}
RegisterRequest::~RegisterRequest() {
  // @@protoc_insertion_point(destructor:gridfs.RegisterRequest)
  SharedDtor(*this);
}
inline void RegisterRequest::SharedDtor(MessageLite& self) {
  RegisterRequest& this_ = static_cast<RegisterRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.host_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegisterRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegisterRequest(arena);
}
constexpr auto RegisterRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RegisterRequest),
                                            alignof(RegisterRequest));
}
constexpr auto RegisterRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegisterRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegisterRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegisterRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegisterRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegisterRequest>(), &RegisterRequest::ByteSizeLong,
              &RegisterRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_._cached_size_),
          false,
      },
      &RegisterRequest::kDescriptorMethods,
      &descriptor_table_gridfs_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegisterRequest_class_data_ =
        RegisterRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegisterRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegisterRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegisterRequest_class_data_.tc_table);
  return RegisterRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 35, 2>
RegisterRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RegisterRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::gridfs::RegisterRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string host = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.host_)}},
    // uint32 data_port = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterRequest, _impl_.data_port_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.data_port_)}},
    // uint64 capacity = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RegisterRequest, _impl_.capacity_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.capacity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string host = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.host_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 data_port = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.data_port_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint64 capacity = 3;
    {PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.capacity_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\26\4\0\0\0\0\0\0"
    "gridfs.RegisterRequest"
    "host"
  }},
};
PROTOBUF_NOINLINE void RegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gridfs.RegisterRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.host_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.capacity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.data_port_) -
        reinterpret_cast<char*>(&_impl_.capacity_)) + sizeof(_impl_.data_port_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegisterRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegisterRequest& this_ = static_cast<const RegisterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegisterRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegisterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:gridfs.RegisterRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string host = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_host().empty()) {
      const ::std::string& _s = this_._internal_host();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "gridfs.RegisterRequest.host");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // uint32 data_port = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_data_port() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_data_port(), target);
    }
  }

  // uint64 capacity = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_capacity() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          3, this_._internal_capacity(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gridfs.RegisterRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegisterRequest::ByteSizeLong(const MessageLite& base) {
  const RegisterRequest& this_ = static_cast<const RegisterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegisterRequest::ByteSizeLong() const {
  const RegisterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:gridfs.RegisterRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string host = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_host().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_host());
      }
    }
    // uint64 capacity = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_capacity() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_capacity());
      }
    }
    // uint32 data_port = 2;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_data_port() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_data_port());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegisterRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterRequest*>(&to_msg);
  auto& from = static_cast<const RegisterRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:gridfs.RegisterRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_host().empty()) {
        _this->_internal_set_host(from._internal_host());
      } else {
        if (_this->_impl_.host_.IsDefault()) {
          _this->_internal_set_host("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_capacity() != 0) {
        _this->_impl_.capacity_ = from._impl_.capacity_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_data_port() != 0) {
        _this->_impl_.data_port_ = from._impl_.data_port_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterRequest::CopyFrom(const RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gridfs.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterRequest::InternalSwap(RegisterRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_, &other->_impl_.host_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.data_port_)
      + sizeof(RegisterRequest::_impl_.data_port_)
      - PROTOBUF_FIELD_OFFSET(RegisterRequest, _impl_.capacity_)>(
          reinterpret_cast<char*>(&_impl_.capacity_),
          reinterpret_cast<char*>(&other->_impl_.capacity_));
}

::google::protobuf::Metadata RegisterRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegisterResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_._has_bits_);
};

RegisterResponse::RegisterResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:gridfs.RegisterResponse)
}
PROTOBUF_NDEBUG_INLINE RegisterResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::gridfs::RegisterResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        datanode_id_(arena, from.datanode_id_) {}

RegisterResponse::RegisterResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegisterResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:gridfs.RegisterResponse)
}
PROTOBUF_NDEBUG_INLINE RegisterResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        datanode_id_(arena) {}

inline void RegisterResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
RegisterResponse::~RegisterResponse() {
  // @@protoc_insertion_point(destructor:gridfs.RegisterResponse)
  SharedDtor(*this);
}
inline void RegisterResponse::SharedDtor(MessageLite& self) {
  RegisterResponse& this_ = static_cast<RegisterResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.datanode_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegisterResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegisterResponse(arena);
}
constexpr auto RegisterResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RegisterResponse),
                                            alignof(RegisterResponse));
}
constexpr auto RegisterResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegisterResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegisterResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegisterResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegisterResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegisterResponse>(), &RegisterResponse::ByteSizeLong,
              &RegisterResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_._cached_size_),
          false,
      },
      &RegisterResponse::kDescriptorMethods,
      &descriptor_table_gridfs_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegisterResponse_class_data_ =
        RegisterResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegisterResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegisterResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegisterResponse_class_data_.tc_table);
  return RegisterResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2>
RegisterResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RegisterResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::gridfs::RegisterResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool success = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RegisterResponse, _impl_.success_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.success_)}},
    // string datanode_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.datanode_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string datanode_id = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.datanode_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool success = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.success_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\27\13\0\0\0\0\0\0"
    "gridfs.RegisterResponse"
    "datanode_id"
  }},
};
PROTOBUF_NOINLINE void RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gridfs.RegisterResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.datanode_id_.ClearNonDefaultToEmpty();
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegisterResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegisterResponse& this_ = static_cast<const RegisterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegisterResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegisterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:gridfs.RegisterResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string datanode_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_datanode_id().empty()) {
      const ::std::string& _s = this_._internal_datanode_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "gridfs.RegisterResponse.datanode_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bool success = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_success(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gridfs.RegisterResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegisterResponse::ByteSizeLong(const MessageLite& base) {
  const RegisterResponse& this_ = static_cast<const RegisterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegisterResponse::ByteSizeLong() const {
  const RegisterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:gridfs.RegisterResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string datanode_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_datanode_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_datanode_id());
      }
    }
    // bool success = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegisterResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterResponse*>(&to_msg);
  auto& from = static_cast<const RegisterResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:gridfs.RegisterResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_datanode_id().empty()) {
        _this->_internal_set_datanode_id(from._internal_datanode_id());
      } else {
        if (_this->_impl_.datanode_id_.IsDefault()) {
          _this->_internal_set_datanode_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_success() != 0) {
        _this->_impl_.success_ = from._impl_.success_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterResponse::CopyFrom(const RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gridfs.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterResponse::InternalSwap(RegisterResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.datanode_id_, &other->_impl_.datanode_id_, arena);
  swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata RegisterResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetPlanRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetPlanRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetPlanRequest, _impl_._has_bits_);
};

GetPlanRequest::GetPlanRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetPlanRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:gridfs.GetPlanRequest)
}
PROTOBUF_NDEBUG_INLINE GetPlanRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::gridfs::GetPlanRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        filename_(arena, from.filename_) {}

GetPlanRequest::GetPlanRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetPlanRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetPlanRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetPlanRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.filesize_ = from._impl_.filesize_;

  // @@protoc_insertion_point(copy_constructor:gridfs.GetPlanRequest)
}
PROTOBUF_NDEBUG_INLINE GetPlanRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        filename_(arena) {}

inline void GetPlanRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.filesize_ = {};
}
GetPlanRequest::~GetPlanRequest() {
  // @@protoc_insertion_point(destructor:gridfs.GetPlanRequest)
  SharedDtor(*this);
}
inline void GetPlanRequest::SharedDtor(MessageLite& self) {
  GetPlanRequest& this_ = static_cast<GetPlanRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.filename_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetPlanRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetPlanRequest(arena);
}
constexpr auto GetPlanRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetPlanRequest),
                                            alignof(GetPlanRequest));
}
constexpr auto GetPlanRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetPlanRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetPlanRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetPlanRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetPlanRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetPlanRequest>(), &GetPlanRequest::ByteSizeLong,
              &GetPlanRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetPlanRequest, _impl_._cached_size_),
          false,
      },
      &GetPlanRequest::kDescriptorMethods,
      &descriptor_table_gridfs_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetPlanRequest_class_data_ =
        GetPlanRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetPlanRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetPlanRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetPlanRequest_class_data_.tc_table);
  return GetPlanRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2>
GetPlanRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetPlanRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetPlanRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::gridfs::GetPlanRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 filesize = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetPlanRequest, _impl_.filesize_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetPlanRequest, _impl_.filesize_)}},
    // string filename = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetPlanRequest, _impl_.filename_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string filename = 1;
    {PROTOBUF_FIELD_OFFSET(GetPlanRequest, _impl_.filename_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 filesize = 2;
    {PROTOBUF_FIELD_OFFSET(GetPlanRequest, _impl_.filesize_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\25\10\0\0\0\0\0\0"
    "gridfs.GetPlanRequest"
    "filename"
  }},
};
PROTOBUF_NOINLINE void GetPlanRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gridfs.GetPlanRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.filename_.ClearNonDefaultToEmpty();
  }
  _impl_.filesize_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetPlanRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetPlanRequest& this_ = static_cast<const GetPlanRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetPlanRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetPlanRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:gridfs.GetPlanRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string filename = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_filename().empty()) {
      const ::std::string& _s = this_._internal_filename();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "gridfs.GetPlanRequest.filename");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // uint64 filesize = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_filesize() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_filesize(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gridfs.GetPlanRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetPlanRequest::ByteSizeLong(const MessageLite& base) {
  const GetPlanRequest& this_ = static_cast<const GetPlanRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetPlanRequest::ByteSizeLong() const {
  const GetPlanRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:gridfs.GetPlanRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string filename = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_filename().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_filename());
      }
    }
    // uint64 filesize = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_filesize() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_filesize());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetPlanRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetPlanRequest*>(&to_msg);
  auto& from = static_cast<const GetPlanRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:gridfs.GetPlanRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_filename().empty()) {
        _this->_internal_set_filename(from._internal_filename());
      } else {
        if (_this->_impl_.filename_.IsDefault()) {
          _this->_internal_set_filename("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_filesize() != 0) {
        _this->_impl_.filesize_ = from._impl_.filesize_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPlanRequest::CopyFrom(const GetPlanRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gridfs.GetPlanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetPlanRequest::InternalSwap(GetPlanRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, &other->_impl_.filename_, arena);
  swap(_impl_.filesize_, other->_impl_.filesize_);
}

::google::protobuf::Metadata GetPlanRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlockAssignment::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BlockAssignment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlockAssignment, _impl_._has_bits_);
};

BlockAssignment::BlockAssignment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BlockAssignment_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:gridfs.BlockAssignment)
}
PROTOBUF_NDEBUG_INLINE BlockAssignment::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::gridfs::BlockAssignment& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        block_id_(arena, from.block_id_),
        host_(arena, from.host_) {}

BlockAssignment::BlockAssignment(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BlockAssignment& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BlockAssignment_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlockAssignment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, size_),
           offsetof(Impl_, data_port_) -
               offsetof(Impl_, size_) +
               sizeof(Impl_::data_port_));

  // @@protoc_insertion_point(copy_constructor:gridfs.BlockAssignment)
}
PROTOBUF_NDEBUG_INLINE BlockAssignment::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        block_id_(arena),
        host_(arena) {}

inline void BlockAssignment::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, size_),
           0,
           offsetof(Impl_, data_port_) -
               offsetof(Impl_, size_) +
               sizeof(Impl_::data_port_));
}
BlockAssignment::~BlockAssignment() {
  // @@protoc_insertion_point(destructor:gridfs.BlockAssignment)
  SharedDtor(*this);
}
inline void BlockAssignment::SharedDtor(MessageLite& self) {
  BlockAssignment& this_ = static_cast<BlockAssignment&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.block_id_.Destroy();
  this_._impl_.host_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BlockAssignment::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BlockAssignment(arena);
}
constexpr auto BlockAssignment::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BlockAssignment),
                                            alignof(BlockAssignment));
}
constexpr auto BlockAssignment::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BlockAssignment_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BlockAssignment::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BlockAssignment>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BlockAssignment::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BlockAssignment>(), &BlockAssignment::ByteSizeLong,
              &BlockAssignment::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BlockAssignment, _impl_._cached_size_),
          false,
      },
      &BlockAssignment::kDescriptorMethods,
      &descriptor_table_gridfs_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BlockAssignment_class_data_ =
        BlockAssignment::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BlockAssignment::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BlockAssignment_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BlockAssignment_class_data_.tc_table);
  return BlockAssignment_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 43, 2>
BlockAssignment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlockAssignment, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BlockAssignment_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::gridfs::BlockAssignment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 size = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockAssignment, _impl_.size_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(BlockAssignment, _impl_.size_)}},
    // string block_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BlockAssignment, _impl_.block_id_)}},
    // string host = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(BlockAssignment, _impl_.host_)}},
    // uint32 data_port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlockAssignment, _impl_.data_port_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(BlockAssignment, _impl_.data_port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string block_id = 1;
    {PROTOBUF_FIELD_OFFSET(BlockAssignment, _impl_.block_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string host = 2;
    {PROTOBUF_FIELD_OFFSET(BlockAssignment, _impl_.host_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 data_port = 3;
    {PROTOBUF_FIELD_OFFSET(BlockAssignment, _impl_.data_port_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint64 size = 4;
    {PROTOBUF_FIELD_OFFSET(BlockAssignment, _impl_.size_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\26\10\4\0\0\0\0\0"
    "gridfs.BlockAssignment"
    "block_id"
    "host"
  }},
};
PROTOBUF_NOINLINE void BlockAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:gridfs.BlockAssignment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.block_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.host_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.data_port_) -
        reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.data_port_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BlockAssignment::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BlockAssignment& this_ = static_cast<const BlockAssignment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BlockAssignment::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BlockAssignment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:gridfs.BlockAssignment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string block_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_block_id().empty()) {
      const ::std::string& _s = this_._internal_block_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "gridfs.BlockAssignment.block_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string host = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_host().empty()) {
      const ::std::string& _s = this_._internal_host();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "gridfs.BlockAssignment.host");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // uint32 data_port = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_data_port() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_data_port(), target);
    }
  }

  // uint64 size = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_size() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          4, this_._internal_size(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gridfs.BlockAssignment)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BlockAssignment::ByteSizeLong(const MessageLite& base) {
  const BlockAssignment& this_ = static_cast<const BlockAssignment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BlockAssignment::ByteSizeLong() const {
  const BlockAssignment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:gridfs.BlockAssignment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string block_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_block_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_block_id());
      }
    }
    // string host = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_host().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_host());
      }
    }
    // uint64 size = 4;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_size() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_size());
      }
    }
    // uint32 data_port = 3;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_data_port() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_data_port());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BlockAssignment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlockAssignment*>(&to_msg);
  auto& from = static_cast<const BlockAssignment&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:gridfs.BlockAssignment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_block_id().empty()) {
        _this->_internal_set_block_id(from._internal_block_id());
      } else {
        if (_this->_impl_.block_id_.IsDefault()) {
          _this->_internal_set_block_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_host().empty()) {
        _this->_internal_set_host(from._internal_host());
      } else {
        if (_this->_impl_.host_.IsDefault()) {
          _this->_internal_set_host("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_size() != 0) {
        _this->_impl_.size_ = from._impl_.size_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_data_port() != 0) {
        _this->_impl_.data_port_ = from._impl_.data_port_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockAssignment::CopyFrom(const BlockAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gridfs.BlockAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlockAssignment::InternalSwap(BlockAssignment* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_id_, &other->_impl_.block_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_, &other->_impl_.host_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlockAssignment, _impl_.data_port_)
      + sizeof(BlockAssignment::_impl_.data_port_)
      - PROTOBUF_FIELD_OFFSET(BlockAssignment, _impl_.size_)>(
          reinterpret_cast<char*>(&_impl_.size_),
          reinterpret_cast<char*>(&other->_impl_.size_));
}

::google::protobuf::Metadata BlockAssignment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetPlanResponse::_Internal {
 public:
};

GetPlanResponse::GetPlanResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetPlanResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:gridfs.GetPlanResponse)
}
PROTOBUF_NDEBUG_INLINE GetPlanResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::gridfs::GetPlanResponse& from_msg)
      : assignments_{visibility, arena, from.assignments_},
        _cached_size_{0} {}

GetPlanResponse::GetPlanResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetPlanResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetPlanResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetPlanResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:gridfs.GetPlanResponse)
}
PROTOBUF_NDEBUG_INLINE GetPlanResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : assignments_{visibility, arena},
        _cached_size_{0} {}

inline void GetPlanResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetPlanResponse::~GetPlanResponse() {
  // @@protoc_insertion_point(destructor:gridfs.GetPlanResponse)
  SharedDtor(*this);
}
inline void GetPlanResponse::SharedDtor(MessageLite& self) {
  GetPlanResponse& this_ = static_cast<GetPlanResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetPlanResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetPlanResponse(arena);
}
constexpr auto GetPlanResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetPlanResponse, _impl_.assignments_) +
          decltype(GetPlanResponse::_impl_.assignments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetPlanResponse), alignof(GetPlanResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetPlanResponse::PlacementNew_,
                                 sizeof(GetPlanResponse),
                                 alignof(GetPlanResponse));
  }
}
constexpr auto GetPlanResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetPlanResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetPlanResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetPlanResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetPlanResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetPlanResponse>(), &GetPlanResponse::ByteSizeLong,
              &GetPlanResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetPlanResponse, _impl_._cached_size_),
          false,
      },
      &GetPlanResponse::kDescriptorMethods,
      &descriptor_table_gridfs_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetPlanResponse_class_data_ =
        GetPlanResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetPlanResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetPlanResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetPlanResponse_class_data_.tc_table);
  return GetPlanResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
GetPlanResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetPlanResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::gridfs::GetPlanResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .gridfs.BlockAssignment assignments = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetPlanResponse, _impl_.assignments_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .gridfs.BlockAssignment assignments = 1;
    {PROTOBUF_FIELD_OFFSET(GetPlanResponse, _impl_.assignments_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::gridfs::BlockAssignment>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetPlanResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gridfs.GetPlanResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.assignments_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetPlanResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetPlanResponse& this_ = static_cast<const GetPlanResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetPlanResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetPlanResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:gridfs.GetPlanResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .gridfs.BlockAssignment assignments = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_assignments_size());
       i < n; i++) {
    const auto& repfield = this_._internal_assignments().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gridfs.GetPlanResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetPlanResponse::ByteSizeLong(const MessageLite& base) {
  const GetPlanResponse& this_ = static_cast<const GetPlanResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetPlanResponse::ByteSizeLong() const {
  const GetPlanResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:gridfs.GetPlanResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .gridfs.BlockAssignment assignments = 1;
    {
      total_size += 1UL * this_._internal_assignments_size();
      for (const auto& msg : this_._internal_assignments()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetPlanResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetPlanResponse*>(&to_msg);
  auto& from = static_cast<const GetPlanResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:gridfs.GetPlanResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_assignments()->MergeFrom(
      from._internal_assignments());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPlanResponse::CopyFrom(const GetPlanResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gridfs.GetPlanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetPlanResponse::InternalSwap(GetPlanResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.assignments_.InternalSwap(&other->_impl_.assignments_);
}

::google::protobuf::Metadata GetPlanResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace gridfs
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_gridfs_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
