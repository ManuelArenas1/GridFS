// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: gridfs.proto
// Protobuf C++ Version: 6.32.0

#ifndef gridfs_2eproto_2epb_2eh
#define gridfs_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_gridfs_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_gridfs_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_gridfs_2eproto;
}  // extern "C"
namespace gridfs {
class BlockAssignment;
struct BlockAssignmentDefaultTypeInternal;
extern BlockAssignmentDefaultTypeInternal _BlockAssignment_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BlockAssignment_class_data_;
class GetPlanRequest;
struct GetPlanRequestDefaultTypeInternal;
extern GetPlanRequestDefaultTypeInternal _GetPlanRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetPlanRequest_class_data_;
class GetPlanResponse;
struct GetPlanResponseDefaultTypeInternal;
extern GetPlanResponseDefaultTypeInternal _GetPlanResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetPlanResponse_class_data_;
class RegisterRequest;
struct RegisterRequestDefaultTypeInternal;
extern RegisterRequestDefaultTypeInternal _RegisterRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RegisterRequest_class_data_;
class RegisterResponse;
struct RegisterResponseDefaultTypeInternal;
extern RegisterResponseDefaultTypeInternal _RegisterResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RegisterResponse_class_data_;
}  // namespace gridfs
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace gridfs {

// ===================================================================


// -------------------------------------------------------------------

class RegisterResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gridfs.RegisterResponse) */ {
 public:
  inline RegisterResponse() : RegisterResponse(nullptr) {}
  ~RegisterResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RegisterResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RegisterResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterResponse(::google::protobuf::internal::ConstantInitialized);

  inline RegisterResponse(const RegisterResponse& from) : RegisterResponse(nullptr, from) {}
  inline RegisterResponse(RegisterResponse&& from) noexcept
      : RegisterResponse(nullptr, ::std::move(from)) {}
  inline RegisterResponse& operator=(const RegisterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterResponse& operator=(RegisterResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterResponse& default_instance() {
    return *reinterpret_cast<const RegisterResponse*>(
        &_RegisterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RegisterResponse& a, RegisterResponse& b) { a.Swap(&b); }
  inline void Swap(RegisterResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RegisterResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegisterResponse& from) { RegisterResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RegisterResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "gridfs.RegisterResponse"; }

 protected:
  explicit RegisterResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RegisterResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RegisterResponse& from);
  RegisterResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RegisterResponse&& from) noexcept
      : RegisterResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDatanodeIdFieldNumber = 1,
    kSuccessFieldNumber = 2,
  };
  // string datanode_id = 1;
  void clear_datanode_id() ;
  const ::std::string& datanode_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_datanode_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_datanode_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_datanode_id();
  void set_allocated_datanode_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_datanode_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_datanode_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_datanode_id();

  public:
  // bool success = 2;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:gridfs.RegisterResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 43,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RegisterResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr datanode_id_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gridfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RegisterResponse_class_data_;
// -------------------------------------------------------------------

class RegisterRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gridfs.RegisterRequest) */ {
 public:
  inline RegisterRequest() : RegisterRequest(nullptr) {}
  ~RegisterRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RegisterRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RegisterRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterRequest(::google::protobuf::internal::ConstantInitialized);

  inline RegisterRequest(const RegisterRequest& from) : RegisterRequest(nullptr, from) {}
  inline RegisterRequest(RegisterRequest&& from) noexcept
      : RegisterRequest(nullptr, ::std::move(from)) {}
  inline RegisterRequest& operator=(const RegisterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterRequest& operator=(RegisterRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterRequest& default_instance() {
    return *reinterpret_cast<const RegisterRequest*>(
        &_RegisterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(RegisterRequest& a, RegisterRequest& b) { a.Swap(&b); }
  inline void Swap(RegisterRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RegisterRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegisterRequest& from) { RegisterRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RegisterRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "gridfs.RegisterRequest"; }

 protected:
  explicit RegisterRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RegisterRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RegisterRequest& from);
  RegisterRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RegisterRequest&& from) noexcept
      : RegisterRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHostFieldNumber = 1,
    kCapacityFieldNumber = 3,
    kDataPortFieldNumber = 2,
  };
  // string host = 1;
  void clear_host() ;
  const ::std::string& host() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_host(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_host();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_host();
  void set_allocated_host(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_host() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_host(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_host();

  public:
  // uint64 capacity = 3;
  void clear_capacity() ;
  ::uint64_t capacity() const;
  void set_capacity(::uint64_t value);

  private:
  ::uint64_t _internal_capacity() const;
  void _internal_set_capacity(::uint64_t value);

  public:
  // uint32 data_port = 2;
  void clear_data_port() ;
  ::uint32_t data_port() const;
  void set_data_port(::uint32_t value);

  private:
  ::uint32_t _internal_data_port() const;
  void _internal_set_data_port(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:gridfs.RegisterRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 35,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RegisterRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr host_;
    ::uint64_t capacity_;
    ::uint32_t data_port_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gridfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RegisterRequest_class_data_;
// -------------------------------------------------------------------

class GetPlanRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gridfs.GetPlanRequest) */ {
 public:
  inline GetPlanRequest() : GetPlanRequest(nullptr) {}
  ~GetPlanRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetPlanRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetPlanRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetPlanRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetPlanRequest(const GetPlanRequest& from) : GetPlanRequest(nullptr, from) {}
  inline GetPlanRequest(GetPlanRequest&& from) noexcept
      : GetPlanRequest(nullptr, ::std::move(from)) {}
  inline GetPlanRequest& operator=(const GetPlanRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPlanRequest& operator=(GetPlanRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPlanRequest& default_instance() {
    return *reinterpret_cast<const GetPlanRequest*>(
        &_GetPlanRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetPlanRequest& a, GetPlanRequest& b) { a.Swap(&b); }
  inline void Swap(GetPlanRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPlanRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPlanRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetPlanRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPlanRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetPlanRequest& from) { GetPlanRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetPlanRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "gridfs.GetPlanRequest"; }

 protected:
  explicit GetPlanRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetPlanRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetPlanRequest& from);
  GetPlanRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetPlanRequest&& from) noexcept
      : GetPlanRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilenameFieldNumber = 1,
    kFilesizeFieldNumber = 2,
  };
  // string filename = 1;
  void clear_filename() ;
  const ::std::string& filename() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_filename(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_filename();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_filename();
  void set_allocated_filename(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_filename() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_filename(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_filename();

  public:
  // uint64 filesize = 2;
  void clear_filesize() ;
  ::uint64_t filesize() const;
  void set_filesize(::uint64_t value);

  private:
  ::uint64_t _internal_filesize() const;
  void _internal_set_filesize(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:gridfs.GetPlanRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 38,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetPlanRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr filename_;
    ::uint64_t filesize_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gridfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetPlanRequest_class_data_;
// -------------------------------------------------------------------

class BlockAssignment final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gridfs.BlockAssignment) */ {
 public:
  inline BlockAssignment() : BlockAssignment(nullptr) {}
  ~BlockAssignment() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BlockAssignment* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BlockAssignment));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlockAssignment(::google::protobuf::internal::ConstantInitialized);

  inline BlockAssignment(const BlockAssignment& from) : BlockAssignment(nullptr, from) {}
  inline BlockAssignment(BlockAssignment&& from) noexcept
      : BlockAssignment(nullptr, ::std::move(from)) {}
  inline BlockAssignment& operator=(const BlockAssignment& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockAssignment& operator=(BlockAssignment&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockAssignment& default_instance() {
    return *reinterpret_cast<const BlockAssignment*>(
        &_BlockAssignment_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(BlockAssignment& a, BlockAssignment& b) { a.Swap(&b); }
  inline void Swap(BlockAssignment* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockAssignment* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockAssignment* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BlockAssignment>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlockAssignment& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlockAssignment& from) { BlockAssignment::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BlockAssignment* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "gridfs.BlockAssignment"; }

 protected:
  explicit BlockAssignment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BlockAssignment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BlockAssignment& from);
  BlockAssignment(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BlockAssignment&& from) noexcept
      : BlockAssignment(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockIdFieldNumber = 1,
    kHostFieldNumber = 2,
    kSizeFieldNumber = 4,
    kDataPortFieldNumber = 3,
  };
  // string block_id = 1;
  void clear_block_id() ;
  const ::std::string& block_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_block_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_block_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_block_id();
  void set_allocated_block_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_block_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_block_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_block_id();

  public:
  // string host = 2;
  void clear_host() ;
  const ::std::string& host() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_host(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_host();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_host();
  void set_allocated_host(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_host() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_host(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_host();

  public:
  // uint64 size = 4;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // uint32 data_port = 3;
  void clear_data_port() ;
  ::uint32_t data_port() const;
  void set_data_port(::uint32_t value);

  private:
  ::uint32_t _internal_data_port() const;
  void _internal_set_data_port(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:gridfs.BlockAssignment)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 43,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BlockAssignment& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr block_id_;
    ::google::protobuf::internal::ArenaStringPtr host_;
    ::uint64_t size_;
    ::uint32_t data_port_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gridfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BlockAssignment_class_data_;
// -------------------------------------------------------------------

class GetPlanResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gridfs.GetPlanResponse) */ {
 public:
  inline GetPlanResponse() : GetPlanResponse(nullptr) {}
  ~GetPlanResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetPlanResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetPlanResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetPlanResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetPlanResponse(const GetPlanResponse& from) : GetPlanResponse(nullptr, from) {}
  inline GetPlanResponse(GetPlanResponse&& from) noexcept
      : GetPlanResponse(nullptr, ::std::move(from)) {}
  inline GetPlanResponse& operator=(const GetPlanResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPlanResponse& operator=(GetPlanResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPlanResponse& default_instance() {
    return *reinterpret_cast<const GetPlanResponse*>(
        &_GetPlanResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GetPlanResponse& a, GetPlanResponse& b) { a.Swap(&b); }
  inline void Swap(GetPlanResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPlanResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPlanResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetPlanResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPlanResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetPlanResponse& from) { GetPlanResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetPlanResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "gridfs.GetPlanResponse"; }

 protected:
  explicit GetPlanResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetPlanResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetPlanResponse& from);
  GetPlanResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetPlanResponse&& from) noexcept
      : GetPlanResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAssignmentsFieldNumber = 1,
  };
  // repeated .gridfs.BlockAssignment assignments = 1;
  int assignments_size() const;
  private:
  int _internal_assignments_size() const;

  public:
  void clear_assignments() ;
  ::gridfs::BlockAssignment* PROTOBUF_NONNULL mutable_assignments(int index);
  ::google::protobuf::RepeatedPtrField<::gridfs::BlockAssignment>* PROTOBUF_NONNULL mutable_assignments();

  private:
  const ::google::protobuf::RepeatedPtrField<::gridfs::BlockAssignment>& _internal_assignments() const;
  ::google::protobuf::RepeatedPtrField<::gridfs::BlockAssignment>* PROTOBUF_NONNULL _internal_mutable_assignments();
  public:
  const ::gridfs::BlockAssignment& assignments(int index) const;
  ::gridfs::BlockAssignment* PROTOBUF_NONNULL add_assignments();
  const ::google::protobuf::RepeatedPtrField<::gridfs::BlockAssignment>& assignments() const;
  // @@protoc_insertion_point(class_scope:gridfs.GetPlanResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetPlanResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::gridfs::BlockAssignment > assignments_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gridfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetPlanResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// RegisterRequest

// string host = 1;
inline void RegisterRequest::clear_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& RegisterRequest::host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gridfs.RegisterRequest.host)
  return _internal_host();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RegisterRequest::set_host(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gridfs.RegisterRequest.host)
}
inline ::std::string* PROTOBUF_NONNULL RegisterRequest::mutable_host()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_host();
  // @@protoc_insertion_point(field_mutable:gridfs.RegisterRequest.host)
  return _s;
}
inline const ::std::string& RegisterRequest::_internal_host() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_.Get();
}
inline void RegisterRequest::_internal_set_host(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.host_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RegisterRequest::_internal_mutable_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.host_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RegisterRequest::release_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gridfs.RegisterRequest.host)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.host_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.host_.Set("", GetArena());
  }
  return released;
}
inline void RegisterRequest::set_allocated_host(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.host_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.host_.IsDefault()) {
    _impl_.host_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:gridfs.RegisterRequest.host)
}

// uint32 data_port = 2;
inline void RegisterRequest::clear_data_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint32_t RegisterRequest::data_port() const {
  // @@protoc_insertion_point(field_get:gridfs.RegisterRequest.data_port)
  return _internal_data_port();
}
inline void RegisterRequest::set_data_port(::uint32_t value) {
  _internal_set_data_port(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:gridfs.RegisterRequest.data_port)
}
inline ::uint32_t RegisterRequest::_internal_data_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_port_;
}
inline void RegisterRequest::_internal_set_data_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_port_ = value;
}

// uint64 capacity = 3;
inline void RegisterRequest::clear_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint64_t RegisterRequest::capacity() const {
  // @@protoc_insertion_point(field_get:gridfs.RegisterRequest.capacity)
  return _internal_capacity();
}
inline void RegisterRequest::set_capacity(::uint64_t value) {
  _internal_set_capacity(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:gridfs.RegisterRequest.capacity)
}
inline ::uint64_t RegisterRequest::_internal_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.capacity_;
}
inline void RegisterRequest::_internal_set_capacity(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = value;
}

// -------------------------------------------------------------------

// RegisterResponse

// string datanode_id = 1;
inline void RegisterResponse::clear_datanode_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datanode_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& RegisterResponse::datanode_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gridfs.RegisterResponse.datanode_id)
  return _internal_datanode_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RegisterResponse::set_datanode_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.datanode_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gridfs.RegisterResponse.datanode_id)
}
inline ::std::string* PROTOBUF_NONNULL RegisterResponse::mutable_datanode_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_datanode_id();
  // @@protoc_insertion_point(field_mutable:gridfs.RegisterResponse.datanode_id)
  return _s;
}
inline const ::std::string& RegisterResponse::_internal_datanode_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.datanode_id_.Get();
}
inline void RegisterResponse::_internal_set_datanode_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.datanode_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RegisterResponse::_internal_mutable_datanode_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.datanode_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RegisterResponse::release_datanode_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gridfs.RegisterResponse.datanode_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.datanode_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.datanode_id_.Set("", GetArena());
  }
  return released;
}
inline void RegisterResponse::set_allocated_datanode_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.datanode_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.datanode_id_.IsDefault()) {
    _impl_.datanode_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:gridfs.RegisterResponse.datanode_id)
}

// bool success = 2;
inline void RegisterResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline bool RegisterResponse::success() const {
  // @@protoc_insertion_point(field_get:gridfs.RegisterResponse.success)
  return _internal_success();
}
inline void RegisterResponse::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:gridfs.RegisterResponse.success)
}
inline bool RegisterResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void RegisterResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// GetPlanRequest

// string filename = 1;
inline void GetPlanRequest::clear_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& GetPlanRequest::filename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gridfs.GetPlanRequest.filename)
  return _internal_filename();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetPlanRequest::set_filename(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.filename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gridfs.GetPlanRequest.filename)
}
inline ::std::string* PROTOBUF_NONNULL GetPlanRequest::mutable_filename()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:gridfs.GetPlanRequest.filename)
  return _s;
}
inline const ::std::string& GetPlanRequest::_internal_filename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filename_.Get();
}
inline void GetPlanRequest::_internal_set_filename(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.filename_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetPlanRequest::_internal_mutable_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.filename_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetPlanRequest::release_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gridfs.GetPlanRequest.filename)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.filename_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.filename_.Set("", GetArena());
  }
  return released;
}
inline void GetPlanRequest::set_allocated_filename(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.filename_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.filename_.IsDefault()) {
    _impl_.filename_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:gridfs.GetPlanRequest.filename)
}

// uint64 filesize = 2;
inline void GetPlanRequest::clear_filesize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filesize_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint64_t GetPlanRequest::filesize() const {
  // @@protoc_insertion_point(field_get:gridfs.GetPlanRequest.filesize)
  return _internal_filesize();
}
inline void GetPlanRequest::set_filesize(::uint64_t value) {
  _internal_set_filesize(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:gridfs.GetPlanRequest.filesize)
}
inline ::uint64_t GetPlanRequest::_internal_filesize() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filesize_;
}
inline void GetPlanRequest::_internal_set_filesize(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filesize_ = value;
}

// -------------------------------------------------------------------

// BlockAssignment

// string block_id = 1;
inline void BlockAssignment::clear_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& BlockAssignment::block_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gridfs.BlockAssignment.block_id)
  return _internal_block_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BlockAssignment::set_block_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.block_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gridfs.BlockAssignment.block_id)
}
inline ::std::string* PROTOBUF_NONNULL BlockAssignment::mutable_block_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_block_id();
  // @@protoc_insertion_point(field_mutable:gridfs.BlockAssignment.block_id)
  return _s;
}
inline const ::std::string& BlockAssignment::_internal_block_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_id_.Get();
}
inline void BlockAssignment::_internal_set_block_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.block_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL BlockAssignment::_internal_mutable_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.block_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE BlockAssignment::release_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gridfs.BlockAssignment.block_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.block_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.block_id_.Set("", GetArena());
  }
  return released;
}
inline void BlockAssignment::set_allocated_block_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.block_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.block_id_.IsDefault()) {
    _impl_.block_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:gridfs.BlockAssignment.block_id)
}

// string host = 2;
inline void BlockAssignment::clear_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& BlockAssignment::host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gridfs.BlockAssignment.host)
  return _internal_host();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BlockAssignment::set_host(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gridfs.BlockAssignment.host)
}
inline ::std::string* PROTOBUF_NONNULL BlockAssignment::mutable_host()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_host();
  // @@protoc_insertion_point(field_mutable:gridfs.BlockAssignment.host)
  return _s;
}
inline const ::std::string& BlockAssignment::_internal_host() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_.Get();
}
inline void BlockAssignment::_internal_set_host(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.host_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL BlockAssignment::_internal_mutable_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.host_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE BlockAssignment::release_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gridfs.BlockAssignment.host)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.host_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.host_.Set("", GetArena());
  }
  return released;
}
inline void BlockAssignment::set_allocated_host(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.host_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.host_.IsDefault()) {
    _impl_.host_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:gridfs.BlockAssignment.host)
}

// uint32 data_port = 3;
inline void BlockAssignment::clear_data_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint32_t BlockAssignment::data_port() const {
  // @@protoc_insertion_point(field_get:gridfs.BlockAssignment.data_port)
  return _internal_data_port();
}
inline void BlockAssignment::set_data_port(::uint32_t value) {
  _internal_set_data_port(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:gridfs.BlockAssignment.data_port)
}
inline ::uint32_t BlockAssignment::_internal_data_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_port_;
}
inline void BlockAssignment::_internal_set_data_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_port_ = value;
}

// uint64 size = 4;
inline void BlockAssignment::clear_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t BlockAssignment::size() const {
  // @@protoc_insertion_point(field_get:gridfs.BlockAssignment.size)
  return _internal_size();
}
inline void BlockAssignment::set_size(::uint64_t value) {
  _internal_set_size(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:gridfs.BlockAssignment.size)
}
inline ::uint64_t BlockAssignment::_internal_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.size_;
}
inline void BlockAssignment::_internal_set_size(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = value;
}

// -------------------------------------------------------------------

// GetPlanResponse

// repeated .gridfs.BlockAssignment assignments = 1;
inline int GetPlanResponse::_internal_assignments_size() const {
  return _internal_assignments().size();
}
inline int GetPlanResponse::assignments_size() const {
  return _internal_assignments_size();
}
inline void GetPlanResponse::clear_assignments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assignments_.Clear();
}
inline ::gridfs::BlockAssignment* PROTOBUF_NONNULL GetPlanResponse::mutable_assignments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:gridfs.GetPlanResponse.assignments)
  return _internal_mutable_assignments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::gridfs::BlockAssignment>* PROTOBUF_NONNULL GetPlanResponse::mutable_assignments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:gridfs.GetPlanResponse.assignments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_assignments();
}
inline const ::gridfs::BlockAssignment& GetPlanResponse::assignments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gridfs.GetPlanResponse.assignments)
  return _internal_assignments().Get(index);
}
inline ::gridfs::BlockAssignment* PROTOBUF_NONNULL GetPlanResponse::add_assignments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::gridfs::BlockAssignment* _add = _internal_mutable_assignments()->Add();
  // @@protoc_insertion_point(field_add:gridfs.GetPlanResponse.assignments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::gridfs::BlockAssignment>& GetPlanResponse::assignments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:gridfs.GetPlanResponse.assignments)
  return _internal_assignments();
}
inline const ::google::protobuf::RepeatedPtrField<::gridfs::BlockAssignment>&
GetPlanResponse::_internal_assignments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.assignments_;
}
inline ::google::protobuf::RepeatedPtrField<::gridfs::BlockAssignment>* PROTOBUF_NONNULL
GetPlanResponse::_internal_mutable_assignments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.assignments_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace gridfs


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // gridfs_2eproto_2epb_2eh
